<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianwen.dcdp.dao.IIpAdrDao" >
  <resultMap id="BaseResultMap" type="com.tianwen.dcdp.pojo.IpAdr" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="IP_ADDRESS" property="ipAddress" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="TINYINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, IP_ADDRESS, STATE, CREATE_TIME
  </sql>
  
 <sql id="whereCondition">
  	  <if test="ipAddress != null and !&quot;&quot;.equals(ipAddress.trim())" >
        AND IP_ADDRESS like concat('%', #{ipAddress,jdbcType=VARCHAR} ,'%')
      </if>
      <if test="id != null" >
        AND ID = #{id}
      </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ip_adr
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ip_adr
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tianwen.dcdp.pojo.IpAdr" useGeneratedKeys="true" keyProperty="id">
    insert into ip_adr (ID, IP_ADDRESS, STATE, 
      CREATE_TIME)
    values (#{id,jdbcType=INTEGER}, #{ipAddress,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.tianwen.dcdp.pojo.IpAdr" useGeneratedKeys="true" keyProperty="id">
    insert into ip_adr
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="ipAddress != null" >
        IP_ADDRESS,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ipAddress != null" >
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianwen.dcdp.pojo.IpAdr" >
    update ip_adr
    <set >
      <if test="ipAddress != null" >
        IP_ADDRESS = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianwen.dcdp.pojo.IpAdr" >
    update ip_adr
    set IP_ADDRESS = #{ipAddress,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=BIGINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- 查询符合条件的总记录数 -->
   <select id="selectTotalCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(1)
  	from ip_adr 
  	<where>
  		<include refid="whereCondition"></include>
  	</where>
  </select>
  
  <!--按条件分页获取列表 -->
  <select id="selectPageList" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select  <include refid="Base_Column_List" /> 
  	from ip_adr 
  	<where>
  		<include refid="whereCondition"></include>
  	</where>
  	<if test="start!=null and size!=null">  
	LIMIT #{start},#{size}
	</if>
  </select>
   <!-- 根据ID，批量删除 -->
  <delete id="batchDelete" parameterType="list">
  	delete from ip_adr
  	where ID in(
  		<foreach collection="list" item="item" separator=",">
  			#{item}
  		</foreach>
  	)
  </delete>
  <update id="updateState">
    update ip_adr set
    STATE = #{value}
    where ID in(
  		<foreach collection="ids" item="item" separator=",">
  			#{item}
  		</foreach>
  	)
  </update>
  
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ip_adr
    where IP_ADDRESS = #{ipAddress}
  </select>
</mapper>
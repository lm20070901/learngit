<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianwen.dcdp.dao.IAnswerDao" >
  <resultMap id="BaseResultMap" type="com.tianwen.dcdp.pojo.Answer" >
    <id column="ANSWER_ID" property="answerId" jdbcType="INTEGER" />
    <result column="QUESTION_ID" property="questionId" jdbcType="INTEGER" />
    <result column="PRE_USER_ID" property="preUserId" jdbcType="INTEGER" />
    <result column="PRE_ANSWER_ID" property="preAnswerId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="PUBLISH_TIME" property="publishTime" jdbcType="BIGINT" />
    <result column="COMMENT_TIMES" property="commentTimes" jdbcType="INTEGER" />
    <result column="VOTE_TIMES" property="voteTimes" jdbcType="INTEGER" />
    <result column="SHOW_STATUS" property="showStatus" jdbcType="TINYINT"/>
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
    <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tianwen.dcdp.pojo.Answer" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ANSWER_ID, QUESTION_ID, PRE_USER_ID, PRE_ANSWER_ID, USER_ID, PUBLISH_TIME, COMMENT_TIMES, 
    VOTE_TIMES,SHOW_STATUS
  </sql>
  <sql id="Blob_Column_List" >
    CONTENT
  </sql>
  <sql id="whereCondition">
  	<if test="author != null and !&quot;&quot;.equals(author.trim())">
  		and b.NICKNAME LIKE concat('%',#{author},'%')
  	</if>
  	<if test="content != null and !&quot;&quot;.equals(content.trim())">
  		and a.CONTENT LIKE concat('%',#{content},'%')
  	</if>
  	<if test="questionId != null">
  		and a.QUESTION_ID = #{questionId}
  	</if>
  	<if test="startDate != null">
  		AND a.PUBLISH_TIME <![CDATA[>=]]> #{startDate}  
  	</if>
  	<if test="endDate != null">
  		AND a.PUBLISH_TIME <![CDATA[<=]]> #{endDate}  
  	</if>
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from answer
    where ANSWER_ID = #{answerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from answer
    where ANSWER_ID = #{answerId,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.tianwen.dcdp.pojo.Answer" >
    insert into answer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        ANSWER_ID,
      </if>
      <if test="questionId != null" >
        QUESTION_ID,
      </if>
      <if test="preUserId != null" >
        PRE_USER_ID,
      </if>
      <if test="preAnswerId != null" >
        PRE_ANSWER_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="publishTime != null" >
        PUBLISH_TIME,
      </if>
      <if test="commentTimes != null" >
        COMMENT_TIMES,
      </if>
      <if test="voteTimes != null" >
        VOTE_TIMES,
      </if>
      <if test="showStatus != null">
      	SHOW_STATUS,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        #{answerId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="preUserId != null" >
        #{preUserId,jdbcType=INTEGER},
      </if>
      <if test="preAnswerId != null" >
        #{preAnswerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=BIGINT},
      </if>
      <if test="commentTimes != null" >
        #{commentTimes,jdbcType=INTEGER},
      </if>
      <if test="voteTimes != null" >
        #{voteTimes,jdbcType=INTEGER},
      </if>
      <if test="showStatus != null">
      	#{showStatus,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianwen.dcdp.pojo.Answer" >
    update answer
    <set >
      <if test="questionId != null" >
        QUESTION_ID = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="preUserId != null" >
        PRE_USER_ID = #{preUserId,jdbcType=INTEGER},
      </if>
      <if test="preAnswerId != null" >
        PRE_ANSWER_ID = #{preAnswerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
        PUBLISH_TIME = #{publishTime,jdbcType=BIGINT},
      </if>
      <if test="commentTimes != null" >
        COMMENT_TIMES = #{commentTimes,jdbcType=INTEGER},
      </if>
      <if test="voteTimes != null" >
        VOTE_TIMES = #{voteTimes,jdbcType=INTEGER},
      </if>
      <if test="showStatus != null">
      	SHOW_STATUS = #{showStatus,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ANSWER_ID = #{answerId,jdbcType=INTEGER}
  </update>
  
  <!-- 按条件查询记录总数 -->
  <select id="selectTotalCount" parameterType="map" resultType="int">
  	select count(1)
  	from answer a left join user b on a.USER_ID = b.USER_ID
  	<where>
  		<include refid="whereCondition"></include>
  	</where>
  </select>
  
  <!-- 按条件查询记录列表 -->
  <select id="selectAnswerList" parameterType="map" resultMap="BaseResultMap">
  	select a.*, b.USER_NAME, b.NICKNAME
  	from answer a left join user b on a.USER_ID = b.USER_ID
  	<where>
  		<include refid="whereCondition"></include>
  	</where>
  	order by a.ANSWER_ID desc
  	<if test="start != null and size != null">
  		limit #{start},#{size}
  	</if>
  </select>
  
  <!-- 修改记录显示状态 -->
  <update id="updateVisibility" parameterType="list">
  	update answer
  	set SHOW_STATUS = (case when SHOW_STATUS = 0 then 1 else 0 end)
  	where ANSWER_ID in 
  	<foreach collection="list" open="(" item="item" separator="," close=")">
  		#{item}
  	</foreach>
  </update> 
  
  <!-- 根据ID，批量删除记录 -->
  <delete id="batchDelete" parameterType="list">
  	delete from answer
  	where ANSWER_ID in 
  	<foreach collection="list" open="(" item="item" separator="," close=")">
  		#{item}
  	</foreach>
  </delete>
</mapper>
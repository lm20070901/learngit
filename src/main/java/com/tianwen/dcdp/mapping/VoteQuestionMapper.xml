<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.dcdp.dao.IVoteQuestionDao">
  <resultMap id="BaseResultMap" type="com.tianwen.dcdp.pojo.VoteQuestion">
    <id column="QUESTION_ID" jdbcType="INTEGER" property="questionId" />
    <result column="VOTE_ID" jdbcType="INTEGER" property="voteId" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="TYPE" jdbcType="TINYINT" property="type" />
    <result column="ORDER_NUM" jdbcType="INTEGER" property="orderNum" />
  </resultMap>
  
  <sql id="Base_Column_List">
    QUESTION_ID, VOTE_ID, TITLE, TYPE, ORDER_NUM
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vote_question
    where QUESTION_ID = #{questionId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vote_question
    where QUESTION_ID = #{questionId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.tianwen.dcdp.pojo.VoteQuestion"  useGeneratedKeys="true" keyProperty="questionId">
    insert into vote_question (QUESTION_ID, VOTE_ID, TITLE, 
      TYPE, ORDER_NUM)
    values (#{questionId,jdbcType=INTEGER}, #{voteId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{orderNum,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.tianwen.dcdp.pojo.VoteQuestion" useGeneratedKeys="true" keyProperty="questionId">
    insert into vote_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        QUESTION_ID,
      </if>
      <if test="voteId != null">
        VOTE_ID,
      </if>
      <if test="title != null">
        TITLE,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="orderNum != null">
        ORDER_NUM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="voteId != null">
        #{voteId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.tianwen.dcdp.pojo.VoteQuestion">
    update vote_question
    <set>
      <if test="voteId != null">
        VOTE_ID = #{voteId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=TINYINT},
      </if>
      <if test="orderNum != null">
        ORDER_NUM = #{orderNum,jdbcType=INTEGER},
      </if>
    </set>
    where QUESTION_ID = #{questionId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.tianwen.dcdp.pojo.VoteQuestion">
    update vote_question
    set VOTE_ID = #{voteId,jdbcType=INTEGER},
      TITLE = #{title,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=TINYINT},
      ORDER_NUM = #{orderNum,jdbcType=INTEGER}
    where QUESTION_ID = #{questionId,jdbcType=INTEGER}
  </update>
  
  <!-- 保存问题排序 -->
  <update id="saveQuestionOrder"  parameterType="java.util.List">
		    UPDATE  vote_question     
            set ORDER_NUM = case 
            <foreach collection="list" item="i" index="index">
                          when QUESTION_ID=#{i} then #{index}
            </foreach>
            end  
            where   QUESTION_ID in 
            <foreach collection="list" index="index" item="item" open="("  separator="," close=")">
				#{item}
			</foreach>
		
  </update>
  
  <!-- 根据问题ID查询问题选项 -->
  <select id="queryQuestionOptionsById" parameterType="java.lang.Integer" resultType="java.util.Map">
  		
			SELECT
			vp.ID as id,
			vp.QUESTION_ID  as  questionId,
			vp.OPTIONBODY   as  optionBody ,
			vp.OPTIONTIMES  as optionTimes
			FROM
				vote_option vp
			WHERE
				vp.QUESTION_ID  = #{questionId,jdbcType=INTEGER}
  </select>
  
  
  
  	<!-- 根据MAP查询选项 -->
	<select id="queryOptionsByMap" parameterType="java.util.Map" resultType="java.util.Map">
				SELECT
				vp.ID AS id,
				vp.QUESTION_ID AS questionId,
				vp.OPTIONBODY AS optionBody,
				vp.OPTIONTIMES AS optionTimes,
				ROUND(IFNULL(vp.OPTIONTIMES/VV.SUM_OPTIONTIMS,0)*100,1) percentage,
				VV.SUM_OPTIONTIMS as totalTimes
				FROM
				vote_option vp LEFT JOIN
				( SELECT QUESTION_ID,IFNULL(SUM(OPTIONTIMES),0) SUM_OPTIONTIMS from
				vote_option GROUP BY QUESTION_ID ) VV
				ON VP.QUESTION_ID = VV.QUESTION_ID
				WHERE 1=1
			<if test="voteId!=null and voteId!=''">
				AND vp.QUESTION_ID IN (
				SELECT QUESTION_ID
				FROM vote_question
				WHERE VOTE_ID = #{voteId,jdbcType=INTEGER} )
			</if>
			<if test="questionId!=null and questionId!=''">
				AND vp.QUESTION_ID = #{questionId,jdbcType=INTEGER}
			</if>
			<if test="id!=null and id!=''">
				AND vp.ID = #{id,jdbcType=INTEGER}
			</if>
			
   </select>
   
   
   <!-- 查询问答题回答列表 -->
   <select id="getAnswerList"  parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
			vu.ID as id,
			vu.USER_ID as userId,
			vu.VOTE_ID as voteId,
			vu.QUESTION_ID as questionId,
			vu.OPTION_IDS  as  optionIds
			FROM
			vote_user   vu
			WHERE 1=1
			<if test="questionId!=null and questionId==''">
				AND	vu.QUESTION_ID =  #{questionId,jdbcType=INTEGER}
			</if>
			<if test="voteId!=null and voteId==''">
				AND	vu.VOTE_ID = #{voteId,jdbcType=INTEGER}
			</if>
			 <if test="start!=null and size!=null">
					LIMIT #{start},#{size}
			</if>
   </select>
   
   
   <!-- 统计问题回答数量  -->
   <select id="countAnswerListNum"  parameterType="java.util.Map" resultType="int">
   		SELECT
			count(*)
			FROM
			vote_user   vu
			WHERE 1=1
			<if test="questionId!=null and questionId==''">
				AND	vu.QUESTION_ID =  #{questionId,jdbcType=INTEGER}
			</if>
			<if test="voteId!=null and voteId==''">
				AND	vu.VOTE_ID = #{voteId,jdbcType=INTEGER}
			</if>
   </select>
   
   <!-- 答卷列表 -->
   <select id="getVoteAnswerList" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
			vu.ID as id ,
			vu.USER_ID as userId,
			vu.VOTE_ID as voteId,
			vu.QUESTION_ID as questionId,
			vu.OPTION_IDS as optionIds,
			vu.INVITE_CODE as invitCode,
			vq.TITLE as title,
			(SELECT COUNT(*) FROM vote_question where VOTE_ID=#{voteId,jdbcType=INTEGER}) as questionNUm  <!-- 题目数量 -->
			FROM
			vote_user vu
			LEFT JOIN vote_question vq ON vu.QUESTION_ID = vq.QUESTION_ID
			WHERE
			vu.VOTE_ID = #{voteId,jdbcType=INTEGER}
			ORDER BY
			CASE WHEN #{isInvite,jdbcType=INTEGER}=0 THEN vu.USER_ID ELSE INVITE_CODE END ASC,<!-- 0 不需要邀请，按照USERID 否则按照邀请码 -->
			CASE WHEN vq.ORDER_NUM IS NOT NULL THEN vq.ORDER_NUM ELSE vq.QUESTION_ID
			END ASC
   </select>
      
   <!-- 删除选项 -->
   <delete id="delteQuestionOption" parameterType="java.lang.Integer">
   			delete  from vote_option  where QUESTION_ID = #{questionId,jdbcType=INTEGER}
   </delete>
   
   <!-- 批量插入选项 -->
   <insert id="inserQuestionOptions" parameterType="java.util.List">
   		insert into vote_option (QUESTION_ID,OPTIONBODY,OPTIONTIMES)  values
  		<foreach collection="options" item="option" separator=",">
  			(#{questionId},#{option},0)  
  		</foreach>
   </insert>
   
   
   
   
	<!-- 删除问卷调查问题 -->
	<delete id="deleteVoteQuestionByQuestionIds" parameterType="java.util.List">
		DELETE   from vote_question	where QUESTION_ID in 
		<foreach collection="list" index="index" item="item" open="("  separator="," close=")">
			#{item}
		</foreach>
		
	</delete>
	
	<!-- 根据问题ID删除问卷调查问题选项 -->
	<delete id="delteVoteOptionByQuestionIds" parameterType="java.util.List">
		DELETE   from vote_option	where QUESTION_ID in 
		<foreach collection="list" index="index" item="item" open="("  separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<!-- 批量删除问题选项 -->
	<delete id="deleteQuestionOptionsByIds" parameterType="java.util.List">
		DELETE   from vote_option	where ID in 
		<foreach collection="list" index="index" item="item" open="("  separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>